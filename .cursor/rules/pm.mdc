---
globs: *.ts,*.tsx,*.js,*.jsx
description: "Regras para Product Manager com integra√ß√£o ClickUp MCP Server"
---

# Product Manager - ClickUp MCP Integration

## Uso Obrigat√≥rio do ClickUp MCP Server

### Cria√ß√£o de Roadmap e Estrat√©gia
```typescript
// ‚úÖ SEMPRE criar roadmap no ClickUp
async function createRoadmapInClickUp(roadmapData: {
  name: string;
  description: string;
  strategicGoals: string[];
  timeline: string;
  priority: number;
  dueDate: string;
  assignees?: string[];
  dependencies?: string[];
}) {
  const roadmap = await mcp_clickup-mcp-server_create_task({
    name: `üó∫Ô∏è Roadmap: ${roadmapData.name}`,
    description: `## Descri√ß√£o\n${roadmapData.description}\n\n## Objetivos Estrat√©gicos\n${roadmapData.strategicGoals.map(goal => `- ${goal}`).join('\n')}\n\n## Timeline\n${roadmapData.timeline}`,
    listName: "Features & Epics",
    priority: roadmapData.priority,
    dueDate: roadmapData.dueDate,
    assignees: roadmapData.assignees,
    dependencies: roadmapData.dependencies,
    tags: ["roadmap", "strategy", "product"]
  });
  
  return roadmap;
}

// ‚úÖ SEMPRE criar feature request
async function createFeatureRequest(featureData: {
  name: string;
  description: string;
  businessImpact: string;
  userImpact: string;
  priority: number;
  dueDate: string;
  assignees?: string[];
  dependencies?: string[];
}) {
  const feature = await mcp_clickup-mcp-server_create_task({
    name: `üöÄ Feature: ${featureData.name}`,
    description: `## Descri√ß√£o\n${featureData.description}\n\n## Impacto de Neg√≥cio\n${featureData.businessImpact}\n\n## Impacto do Usu√°rio\n${featureData.userImpact}`,
    listName: "Features & Epics",
    priority: featureData.priority,
    dueDate: featureData.dueDate,
    assignees: featureData.assignees,
    dependencies: featureData.dependencies,
    tags: ["feature", "product", "enhancement"]
  });
  
  return feature;
}
```

### Gest√£o de Produto
```typescript
// ‚úÖ SEMPRE criar task de an√°lise de mercado
async function createMarketAnalysisTask(analysisData: {
  name: string;
  description: string;
  marketSegment: string;
  competitors: string[];
  priority: number;
  dueDate: string;
  assignees?: string[];
}) {
  const task = await mcp_clickup-mcp-server_create_task({
    name: `üìä An√°lise: ${analysisData.name}`,
    description: `## Descri√ß√£o\n${analysisData.description}\n\n## Segmento de Mercado\n${analysisData.marketSegment}\n\n## Concorrentes\n${analysisData.competitors.map(comp => `- ${comp}`).join('\n')}`,
    listName: "Features & Epics",
    priority: analysisData.priority,
    dueDate: analysisData.dueDate,
    assignees: analysisData.assignees,
    tags: ["analysis", "market", "research"]
  });
  
  return task;
}

// ‚úÖ SEMPRE criar task de m√©tricas
async function createMetricsTask(metricsData: {
  name: string;
  description: string;
  metrics: string[];
  targetValues: string[];
  priority: number;
  dueDate: string;
  assignees?: string[];
}) {
  const task = await mcp_clickup-mcp-server_create_task({
    name: `üìà M√©tricas: ${metricsData.name}`,
    description: `## Descri√ß√£o\n${metricsData.description}\n\n## M√©tricas\n${metricsData.metrics.map((metric, index) => `- ${metric}: ${metricsData.targetValues[index]}`).join('\n')}`,
    listName: "Features & Epics",
    priority: metricsData.priority,
    dueDate: metricsData.dueDate,
    assignees: metricsData.assignees,
    tags: ["metrics", "kpi", "analytics"]
  });
  
  return task;
}
```

### Documenta√ß√£o Estrat√©gica
```typescript
// ‚úÖ SEMPRE criar documenta√ß√£o estrat√©gica no ClickUp
async function createStrategicDocument(documentData: {
  name: string;
  content: string;
  type: 'strategy' | 'market-analysis' | 'product-vision' | 'business-case';
}) {
  const document = await mcp_clickup-mcp-server_create_document({
    name: `üìä ${documentData.type.toUpperCase()}: ${documentData.name}`,
    parent: { id: "901413034981", type: 6 },
    visibility: "PRIVATE",
    create_page: true
  });
  
  // Atualizar conte√∫do
  const pages = await mcp_clickup-mcp-server_list_document_pages({
    documentId: document.id
  });
  
  if (pages.pages?.[0]) {
    await mcp_clickup-mcp-server_update_document_page({
      documentId: document.id,
      pageId: pages.pages[0].id,
      content: documentData.content,
      content_format: "text/md",
      content_edit_mode: "replace"
    });
  }
  
  return document;
}
```

### Gest√£o de Stakeholders
```typescript
// ‚úÖ SEMPRE criar task para stakeholder
async function createStakeholderTask(stakeholderData: {
  name: string;
  description: string;
  stakeholder: string;
  priority: number;
  dueDate: string;
  assignees?: string[];
}) {
  const task = await mcp_clickup-mcp-server_create_task({
    name: `üë• ${stakeholderData.name}`,
    description: `## Descri√ß√£o\n${stakeholderData.description}\n\n## Stakeholder\n${stakeholderData.stakeholder}`,
    listName: "Features & Epics",
    priority: stakeholderData.priority,
    dueDate: stakeholderData.dueDate,
    assignees: stakeholderData.assignees,
    tags: ["stakeholder", "business"]
  });
  
  return task;
}
```

## Campos Obrigat√≥rios ClickUp

### Roadmap Fields
- **name**: T√≠tulo do roadmap com √≠cone
- **description**: Descri√ß√£o estrat√©gica em markdown
- **listName**: "Features & Epics"
- **priority**: 1=Urgent, 2=High, 3=Normal, 4=Low
- **dueDate**: Data de vencimento do roadmap
- **assignees**: Array de IDs de stakeholders
- **dependencies**: Array de IDs de roadmaps dependentes
- **tags**: Array de tags estrat√©gicas

### Feature Fields
- **name**: T√≠tulo da feature com √≠cone
- **description**: Descri√ß√£o completa em markdown
- **listName**: "Features & Epics"
- **priority**: Prioridade baseada no valor estrat√©gico
- **dueDate**: Data de vencimento da feature
- **dependencies**: Array de IDs de features dependentes
- **tags**: Array de tags de produto

### Document Fields
- **name**: Nome do documento com √≠cone e tipo
- **parent**: Technical Docs List
- **visibility**: "PRIVATE" para documenta√ß√£o interna
- **content**: Conte√∫do estrat√©gico em markdown

## Exemplos de Uso

### Criar Roadmap
```typescript
await createRoadmapInClickUp({
  name: "Q1 2025 - Autentica√ß√£o e Seguran√ßa",
  description: "Roadmap para implementa√ß√£o de sistema de autentica√ß√£o e seguran√ßa",
  strategicGoals: [
    "Melhorar seguran√ßa da plataforma",
    "Reduzir fric√ß√£o no onboarding",
    "Aumentar reten√ß√£o de usu√°rios"
  ],
  timeline: "Janeiro - Mar√ßo 2025",
  priority: 1,
  dueDate: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString(),
  assignees: ["pm123"]
});
```

### Criar Feature Request
```typescript
await createFeatureRequest({
  name: "Login Social",
  description: "Implementar login com Google e Facebook",
  businessImpact: "Reduzir fric√ß√£o no onboarding em 40%",
  userImpact: "Usu√°rios podem fazer login mais rapidamente",
  priority: 2,
  dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
  assignees: ["pm123"]
});
```

### Criar An√°lise de Mercado
```typescript
await createMarketAnalysisTask({
  name: "An√°lise de Concorrentes - Autentica√ß√£o",
  description: "Analisar solu√ß√µes de autentica√ß√£o dos principais concorrentes",
  marketSegment: "SaaS B2B",
  competitors: ["Auth0", "Firebase Auth", "AWS Cognito"],
  priority: 2,
  dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),
  assignees: ["pm123"]
});
```

---

**Lembre-se**: Como PM, sempre use ClickUp MCP para criar roadmaps, features e documenta√ß√£o estrat√©gica com foco no valor do produto!